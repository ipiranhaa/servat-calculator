{"version":3,"file":"static/webpack/static/development/pages/index.js.28210fbcb00eec99fc1b.hot-update.js","sources":["webpack:///./src/components/CreateDialog.tsx"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport {\n  Dialog,\n  AppBar,\n  Button,\n  Toolbar,\n  IconButton,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  Avatar,\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport FoodIcon from '@material-ui/icons/Fastfood'\nimport { toggleCreateDialog } from '../actions/uiAction'\nimport CreateForm from './CreateForm'\nimport { setNewOrders, submitNewPerson } from '../actions/orderAction'\n\nconst StyledAppBar: React.ComponentType<any> = styled(AppBar)`\n  position: 'relative';\n`\n\nconst StyledTypography: React.ComponentType<any> = styled(Typography)`\n  flex: 1;\n`\n\nconst StyledContainer: React.ComponentType<any> = styled.div`\n  padding: 10vh 6vw;\n`\n\ninterface Props {\n  isOpen: boolean\n  editingOrder: {\n    name: string\n    currentOrder: number | string\n    orders: number[]\n  }\n  uiDispatch: any\n  orderDispatch: any\n}\n\nfunction CreateDialog(props: Props) {\n  const { isOpen, editingOrder, uiDispatch, orderDispatch } = props\n\n  const handleClose = () => {\n    const action: any = toggleCreateDialog(false)\n    uiDispatch(action)\n  }\n\n  const handleSubmitPerson = () => {\n    orderDispatch(submitNewPerson())\n    handleClose()\n  }\n\n  const handleRemoveOrder = (index: number) => {\n    const newOrders = editingOrder.orders.filter((_value, idx) => idx !== index)\n    orderDispatch(setNewOrders(newOrders))\n  }\n\n  // const Transition = (componentProps: any) => <Slide direction='up' {...componentProps} />\n\n  return (\n    <Dialog fullScreen open={isOpen} onClose={handleClose}>\n      <StyledAppBar>\n        <Toolbar>\n          <IconButton color='inherit' aria-label='Close' onClick={handleClose}>\n            <CloseIcon />\n          </IconButton>\n          <StyledTypography variant='h6' color='inherit'>\n            Add Order\n          </StyledTypography>\n          <Button color='inherit' onClick={handleSubmitPerson}>\n            save\n          </Button>\n        </Toolbar>\n      </StyledAppBar>\n      <StyledContainer>\n        <CreateForm editingOrder={editingOrder} orderDispatch={orderDispatch} />\n        <List dense={false}>\n          {editingOrder.orders.map((price, index) => (\n            <ListItem key={index}>\n              <ListItemAvatar>\n                <Avatar>\n                  <FoodIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={price} />\n              <ListItemSecondaryAction>\n                <IconButton aria-label='Delete' onClick={() => handleRemoveOrder(index)}>\n                  <DeleteIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      </StyledContainer>\n    </Dialog>\n  )\n}\n\nexport default CreateDialog\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAcmBA;AACA;AACA;;;;A","sourceRoot":""}